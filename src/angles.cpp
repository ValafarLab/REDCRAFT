#include "angles.h"
#include "redcat.h"
#include "tstorage.h"
#include <sstream>
#include <cmath>

Angles::Angles() = default;

int Angles::getNumOfMedia() const {
    return m_NumOfMedia;
}

void Angles::setNumOfMedia(int numOfMedia) {
    Angles::m_NumOfMedia = numOfMedia;
}

const std::string &Angles::getRdcPrefix() const {
    return m_RDCPrefix;
}

void Angles::setRdcPrefix(const std::string &rdcPrefix) {
    m_RDCPrefix = rdcPrefix;
}

void Angles::generateSpaces() {
    std::stringstream *ramSpaceSS;
    switch (this->m_RamSpace) {
        case RAM1:
            ramSpacePairs.resize(182);
            ramSpaceSS = new std::stringstream("-170 150 -170 160 -170 170 -160 120 -160 130 -160 140 -160 150 -160 160 -160 170 -150 110 -150 120 -150 130 -150 140 -150 150 -150 160 -150 170 -140 100 -140 110 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -10 -130 0 -130 90 -130 100 -130 110 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -30	-120 -20 -120 -10 -120 0 -120 10 -120 20 -120 90	-120 100 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -40 -110 -30 -110 -20 -110 -10	-110 0 -110 10 -110 20 -110 30 -110 100 -110 110	-110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 90 -100 100 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 90 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 100 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 100 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30-60 -20 -60 -10 -60 0 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 120 -50 130 -50 140 -50 150 -40 -70 -40 -60 -40 -50 -40 -40 -40 -30 -40 -20 -40 130 -40 140 -30 -70 -30 -60 -30 -50 -30 -40 50 30 50 40 50 50 60 30 60 40	60 50 70 30 70 40");
            break;
        case RAM2:
            ramSpacePairs.resize(610);
            ramSpaceSS = new std::stringstream("-180 -180 -180 -170 -180 -70 -180 -60 -180 70 -180 80 -180 90 -180 100 -180 110 -180 120 -180 130 -180 140 -180 150 -180 160 -180 170 -170 -180 -170 -170 -170 -160 -170 -150 -170 -140 -170 -70 -170 -60 -170 -50 -170 -20 -170 -10 -170 0 -170 10 -170 20 -170 30 -170 40 -170 60 -170 70 -170 80 -170 90 -170 100 -170 110 -170 120 -170 130 -170 140 -170 150 -170 160 -170 170 -160 -180 -160 -170 -160 -160 -160 -150 -160 -140 -160 -70 -160 -60 -160 -50 -160 -40 -160 -30 -160 -20 -160 -10 -160 0 -160 10 -160 20 -160 30 -160 40 -160 50 -160 60 -160 70 -160 80 -160 90 -160 100 -160 110 -160 120 -160 130 -160 140 -160 150 -160 160 -160 170 -150 -180 -150 -170 -150 -160 -150 -150 -150 -140 -150 -80 -150 -70 -150 -60 -150 -50 -150 -40 -150 -30 -150 -20 -150 -10 -150 0 -150 10 -150 20 -150 30 -150 40 -150 50 -150 60 -150 70 -150 80 -150 90 -150 100 -150 110 -150 120 -150 130 -150 140 -150 150 -150 160 -150 170 -140 -180 -140 -170 -140 -160 -140 -150 -140 -140 -140 -80 -140 -70 -140 -60 -140 -50 -140 -40 -140 -30 -140 -20 -140 -10 -140 0 -140 10 -140 20 -140 30 -140 40 -140 50 -140 60 -140 70 -140 80 -140 90 -140 100 -140 110 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -180 -130 -170 -130 -160 -130 -150 -130 -140 -130 -130 -130 -120 -130 -100 -130 -90 -130 -80 -130 -70 -130 -60 -130 -50 -130 -40 -130 -30 -130 -20 -130 -10 -130 0 -130 10 -130 20 -130 30 -130 40 -130 50 -130 60 -130 70 -130 80 -130 90 -130 100 -130 110 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -180 -120 -170 -120 -160 -120 -150 -120 -140 -120 -130 -120 -120 -120 -100 -120 -90 -120 -80 -120 -70 -120 -60 -120 -50 -120 -40 -120 -30 -120 -20 -120 -10 -120 0 -120 10 -120 20 -120 30 -120 40 -120 50 -120 60 -120 70 -120 80 -120 90 -120 100 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -180 -110 -170 -110 -160 -110 -150 -110 -140 -110 -130 -110 -120 -110 -110 -110 -100 -110 -90 -110 -80 -110 -70 -110 -60 -110 -50 -110 -40 -110 -30 -110 -20 -110 -10 -110 0 -110 10 -110 20 -110 30 -110 40 -110 50 -110 60 -110 70 -110 80 -110 90 -110 100 -110 110 -110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -180 -100 -170 -100 -160 -100 -150 -100 -140 -100 -130 -100 -120 -100 -110 -100 -100 -100 -90 -100 -80 -100 -70 -100 -60 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 40 -100 50 -100 60 -100 70 -100 80 -100 90 -100 100 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -180 -90 -170 -90 -160 -90 -150 -90 -140 -90 -130 -90 -120 -90 -110 -90 -100 -90 -90 -90 -80 -90 -70 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 30 -90 40 -90 50 -90 60 -90 70 -90 80 -90 90 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -180 -80 -170 -80 -160 -80 -150 -80 -140 -80 -130 -80 -100 -80 -90 -80 -80 -80 -70 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 30 -80 40 -80 50 -80 60 -80 70 -80 80 -80 90 -80 100 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -180 -70 -170 -70 -160 -70 -150 -70 -110 -70 -100 -70 -90 -70 -80 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 20 -70 30 -70 40 -70 50 -70 60 -70 70 -70 80 -70 90 -70 100 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -180 -60 -170 -60 -160 -60 -110 -60 -100 -60 -90 -60 -80 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30 -60 -20 -60 -10 -60 0 -60 10 -60 20 -60 30 -60 40 -60 50 -60 60 -60 70 -60 80 -60 90 -60 100 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -180 -50 -170 -50 -160 -50 -100 -50 -90 -50 -80 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 0 -50 10 -50 20 -50 30 -50 50 -50 60 -50 70 -50 80 -50 90 -50 100 -50 110 -50 120 -50 130 -50 140 -50 150 -50 160 -50 170 -40 -100 -40 -90 -40 -80 -40 -70 -40 -60 -40 -50 -40 -40 -40 -30 -40 -20 -40 -10 -40 0 -40 10 -40 80 -40 90 -40 100 -40 110 -40 120 -40 130 -40 140 -40 150 -40 160 -40 170 -30 -100 -30 -90 -30 -80 -30 -70 -30 -60 -30 -50 -30 -40 -30 -30 -30 -20 -30 -10 -30 0 -30 90 -30 100 -30 110 -30 120 -30 130 -30 140 -30 150 -30 160 -30 170 -20 -90 -20 -80 -20 -70 -20 -60 -20 -50 -20 -40 -20 -30 -20 -20 -20 90 -20 100 -20 110 -20 120 -20 130 -20 140 -20 150 -10 -90 -10 -80 -10 -70 -10 -60 -10 -50 -10 -40 -10 -30 -10 90 -10 100 -10 110 -10 140 -10 150 0 -90 0 -80 0 -70 0 -60 0 -50 10 -80 10 -70 30 40 30 50 30 60 30 70 30 80 30 90 40 20 40 30 40 40 40 50 40 60 40 70 40 80 40 90 50 -170 50 -160 50 -150 50 -140 50 -10 50 0 50 10 50 20 50 30 50 40 50 50 50 60 50 70 50 80 50 90 60 -170 60 -160 60 -150 60 -140 60 -10 60 0 60 10 60 20 60 30 60 40 60 50 60 60 60 70 60 80 60 90 60 100 70 -170 70 -160 70 -10 70 0 70 10 70 20 70 30 70 40 70 50 70 60 70 70 70 80 70 90 70 100 80 -10 80 0 80 10 80 20 80 30 80 40 80 50 80 60 80 90 80 100 90 -10 90 0 90 10 90 20 90 30 90 50 90 60 150 150 150 160 160 140 160 150 160 160 160 170 170 -180 170 -170 170 90 170 100 170 110 170 120 170 130 170 140 170 150 170 160 170 170");
            break;
        case RAM_ALL:
            ramSpacePairs.resize(1296);
            ramSpaceSS = new std::stringstream("-180 -180 -180 -170 -180 -160 -180 -150 -180 -140 -180 -130 -180 -120 -180 -110 -180 -100 -180 -90 -180 -80 -180 -70 -180 -60 -180 -50 -180 -40 -180 -30 -180 -20 -180 -10 -180 0 -180 10 -180 20 -180 30 -180 40 -180 50 -180 60 -180 70 -180 80 -180 90 -180 100 -180 110 -180 120 -180 130 -180 140 -180 150 -180 160 -180 170 -170 -180 -170 -170 -170 -160 -170 -150 -170 -140 -170 -130 -170 -120 -170 -110 -170 -100 -170 -90 -170 -80 -170 -70 -170 -60 -170 -50 -170 -40 -170 -30 -170 -20 -170 -10 -170 0 -170 10 -170 20 -170 30 -170 40 -170 50 -170 60 -170 70 -170 80 -170 90 -170 100 -170 110 -170 120 -170 130 -170 140 -170 150 -170 160 -170 170 -160 -180 -160 -170 -160 -160 -160 -150 -160 -140 -160 -130 -160 -120 -160 -110 -160 -100 -160 -90 -160 -80 -160 -70 -160 -60 -160 -50 -160 -40 -160 -30 -160 -20 -160 -10 -160 0 -160 10 -160 20 -160 30 -160 40 -160 50 -160 60 -160 70 -160 80 -160 90 -160 100 -160 110 -160 120 -160 130 -160 140 -160 150 -160 160 -160 170 -150 -180 -150 -170 -150 -160 -150 -150 -150 -140 -150 -130 -150 -120 -150 -110 -150 -100 -150 -90 -150 -80 -150 -70 -150 -60 -150 -50 -150 -40 -150 -30 -150 -20 -150 -10 -150 0 -150 10 -150 20 -150 30 -150 40 -150 50 -150 60 -150 70 -150 80 -150 90 -150 100 -150 110 -150 120 -150 130 -150 140 -150 150 -150 160 -150 170 -140 -180 -140 -170 -140 -160 -140 -150 -140 -140 -140 -130 -140 -120 -140 -110 -140 -100 -140 -90 -140 -80 -140 -70 -140 -60 -140 -50 -140 -40 -140 -30 -140 -20 -140 -10 -140 0 -140 10 -140 20 -140 30 -140 40 -140 50 -140 60 -140 70 -140 80 -140 90 -140 100 -140 110 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -180 -130 -170 -130 -160 -130 -150 -130 -140 -130 -130 -130 -120 -130 -110 -130 -100 -130 -90 -130 -80 -130 -70 -130 -60 -130 -50 -130 -40 -130 -30 -130 -20 -130 -10 -130 0 -130 10 -130 20 -130 30 -130 40 -130 50 -130 60 -130 70 -130 80 -130 90 -130 100 -130 110 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -180 -120 -170 -120 -160 -120 -150 -120 -140 -120 -130 -120 -120 -120 -110 -120 -100 -120 -90 -120 -80 -120 -70 -120 -60 -120 -50 -120 -40 -120 -30 -120 -20 -120 -10 -120 0 -120 10 -120 20 -120 30 -120 40 -120 50 -120 60 -120 70 -120 80 -120 90 -120 100 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -180 -110 -170 -110 -160 -110 -150 -110 -140 -110 -130 -110 -120 -110 -110 -110 -100 -110 -90 -110 -80 -110 -70 -110 -60 -110 -50 -110 -40 -110 -30 -110 -20 -110 -10 -110 0 -110 10 -110 20 -110 30 -110 40 -110 50 -110 60 -110 70 -110 80 -110 90 -110 100 -110 110 -110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -180 -100 -170 -100 -160 -100 -150 -100 -140 -100 -130 -100 -120 -100 -110 -100 -100 -100 -90 -100 -80 -100 -70 -100 -60 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 40 -100 50 -100 60 -100 70 -100 80 -100 90 -100 100 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -180 -90 -170 -90 -160 -90 -150 -90 -140 -90 -130 -90 -120 -90 -110 -90 -100 -90 -90 -90 -80 -90 -70 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 30 -90 40 -90 50 -90 60 -90 70 -90 80 -90 90 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -180 -80 -170 -80 -160 -80 -150 -80 -140 -80 -130 -80 -120 -80 -110 -80 -100 -80 -90 -80 -80 -80 -70 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 30 -80 40 -80 50 -80 60 -80 70 -80 80 -80 90 -80 100 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -180 -70 -170 -70 -160 -70 -150 -70 -140 -70 -130 -70 -120 -70 -110 -70 -100 -70 -90 -70 -80 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 20 -70 30 -70 40 -70 50 -70 60 -70 70 -70 80 -70 90 -70 100 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -180 -60 -170 -60 -160 -60 -150 -60 -140 -60 -130 -60 -120 -60 -110 -60 -100 -60 -90 -60 -80 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30 -60 -20 -60 -10 -60 0 -60 10 -60 20 -60 30 -60 40 -60 50 -60 60 -60 70 -60 80 -60 90 -60 100 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -180 -50 -170 -50 -160 -50 -150 -50 -140 -50 -130 -50 -120 -50 -110 -50 -100 -50 -90 -50 -80 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 0 -50 10 -50 20 -50 30 -50 40 -50 50 -50 60 -50 70 -50 80 -50 90 -50 100 -50 110 -50 120 -50 130 -50 140 -50 150 -50 160 -50 170 -40 -180 -40 -170 -40 -160 -40 -150 -40 -140 -40 -130 -40 -120 -40 -110 -40 -100 -40 -90 -40 -80 -40 -70 -40 -60 -40 -50 -40 -40 -40 -30 -40 -20 -40 -10 -40 0 -40 10 -40 20 -40 30 -40 40 -40 50 -40 60 -40 70 -40 80 -40 90 -40 100 -40 110 -40 120 -40 130 -40 140 -40 150 -40 160 -40 170 -30 -180 -30 -170 -30 -160 -30 -150 -30 -140 -30 -130 -30 -120 -30 -110 -30 -100 -30 -90 -30 -80 -30 -70 -30 -60 -30 -50 -30 -40 -30 -30 -30 -20 -30 -10 -30 0 -30 10 -30 20 -30 30 -30 40 -30 50 -30 60 -30 70 -30 80 -30 90 -30 100 -30 110 -30 120 -30 130 -30 140 -30 150 -30 160 -30 170 -20 -180 -20 -170 -20 -160 -20 -150 -20 -140 -20 -130 -20 -120 -20 -110 -20 -100 -20 -90 -20 -80 -20 -70 -20 -60 -20 -50 -20 -40 -20 -30 -20 -20 -20 -10 -20 0 -20 10 -20 20 -20 30 -20 40 -20 50 -20 60 -20 70 -20 80 -20 90 -20 100 -20 110 -20 120 -20 130 -20 140 -20 150 -20 160 -20 170 -10 -180 -10 -170 -10 -160 -10 -150 -10 -140 -10 -130 -10 -120 -10 -110 -10 -100 -10 -90 -10 -80 -10 -70 -10 -60 -10 -50 -10 -40 -10 -30 -10 -20 -10 -10 -10 0 -10 10 -10 20 -10 30 -10 40 -10 50 -10 60 -10 70 -10 80 -10 90 -10 100 -10 110 -10 120 -10 130 -10 140 -10 150 -10 160 -10 170 0 -180 0 -170 0 -160 0 -150 0 -140 0 -130 0 -120 0 -110 0 -100 0 -90 0 -80 0 -70 0 -60 0 -50 0 -40 0 -30 0 -20 0 -10 0 0 0 10 0 20 0 30 0 40 0 50 0 60 0 70 0 80 0 90 0 100 0 110 0 120 0 130 0 140 0 150 0 160 0 170 10 -180 10 -170 10 -160 10 -150 10 -140 10 -130 10 -120 10 -110 10 -100 10 -90 10 -80 10 -70 10 -60 10 -50 10 -40 10 -30 10 -20 10 -10 10 0 10 10 10 20 10 30 10 40 10 50 10 60 10 70 10 80 10 90 10 100 10 110 10 120 10 130 10 140 10 150 10 160 10 170 20 -180 20 -170 20 -160 20 -150 20 -140 20 -130 20 -120 20 -110 20 -100 20 -90 20 -80 20 -70 20 -60 20 -50 20 -40 20 -30 20 -20 20 -10 20 0 20 10 20 20 20 30 20 40 20 50 20 60 20 70 20 80 20 90 20 100 20 110 20 120 20 130 20 140 20 150 20 160 20 170 30 -180 30 -170 30 -160 30 -150 30 -140 30 -130 30 -120 30 -110 30 -100 30 -90 30 -80 30 -70 30 -60 30 -50 30 -40 30 -30 30 -20 30 -10 30 0 30 10 30 20 30 30 30 40 30 50 30 60 30 70 30 80 30 90 30 100 30 110 30 120 30 130 30 140 30 150 30 160 30 170 40 -180 40 -170 40 -160 40 -150 40 -140 40 -130 40 -120 40 -110 40 -100 40 -90 40 -80 40 -70 40 -60 40 -50 40 -40 40 -30 40 -20 40 -10 40 0 40 10 40 20 40 30 40 40 40 50 40 60 40 70 40 80 40 90 40 100 40 110 40 120 40 130 40 140 40 150 40 160 40 170 50 -180 50 -170 50 -160 50 -150 50 -140 50 -130 50 -120 50 -110 50 -100 50 -90 50 -80 50 -70 50 -60 50 -50 50 -40 50 -30 50 -20 50 -10 50 0 50 10 50 20 50 30 50 40 50 50 50 60 50 70 50 80 50 90 50 100 50 110 50 120 50 130 50 140 50 150 50 160 50 170 60 -180 60 -170 60 -160 60 -150 60 -140 60 -130 60 -120 60 -110 60 -100 60 -90 60 -80 60 -70 60 -60 60 -50 60 -40 60 -30 60 -20 60 -10 60 0 60 10 60 20 60 30 60 40 60 50 60 60 60 70 60 80 60 90 60 100 60 110 60 120 60 130 60 140 60 150 60 160 60 170 70 -180 70 -170 70 -160 70 -150 70 -140 70 -130 70 -120 70 -110 70 -100 70 -90 70 -80 70 -70 70 -60 70 -50 70 -40 70 -30 70 -20 70 -10 70 0 70 10 70 20 70 30 70 40 70 50 70 60 70 70 70 80 70 90 70 100 70 110 70 120 70 130 70 140 70 150 70 160 70 170 80 -180 80 -170 80 -160 80 -150 80 -140 80 -130 80 -120 80 -110 80 -100 80 -90 80 -80 80 -70 80 -60 80 -50 80 -40 80 -30 80 -20 80 -10 80 0 80 10 80 20 80 30 80 40 80 50 80 60 80 70 80 80 80 90 80 100 80 110 80 120 80 130 80 140 80 150 80 160 80 170 90 -180 90 -170 90 -160 90 -150 90 -140 90 -130 90 -120 90 -110 90 -100 90 -90 90 -80 90 -70 90 -60 90 -50 90 -40 90 -30 90 -20 90 -10 90 0 90 10 90 20 90 30 90 40 90 50 90 60 90 70 90 80 90 90 90 100 90 110 90 120 90 130 90 140 90 150 90 160 90 170 100 -180 100 -170 100 -160 100 -150 100 -140 100 -130 100 -120 100 -110 100 -100 100 -90 100 -80 100 -70 100 -60 100 -50 100 -40 100 -30 100 -20 100 -10 100 0 100 10 100 20 100 30 100 40 100 50 100 60 100 70 100 80 100 90 100 100 100 110 100 120 100 130 100 140 100 150 100 160 100 170 110 -180 110 -170 110 -160 110 -150 110 -140 110 -130 110 -120 110 -110 110 -100 110 -90 110 -80 110 -70 110 -60 110 -50 110 -40 110 -30 110 -20 110 -10 110 0 110 10 110 20 110 30 110 40 110 50 110 60 110 70 110 80 110 90 110 100 110 110 110 120 110 130 110 140 110 150 110 160 110 170 120 -180 120 -170 120 -160 120 -150 120 -140 120 -130 120 -120 120 -110 120 -100 120 -90 120 -80 120 -70 120 -60 120 -50 120 -40 120 -30 120 -20 120 -10 120 0 120 10 120 20 120 30 120 40 120 50 120 60 120 70 120 80 120 90 120 100 120 110 120 120 120 130 120 140 120 150 120 160 120 170 130 -180 130 -170 130 -160 130 -150 130 -140 130 -130 130 -120 130 -110 130 -100 130 -90 130 -80 130 -70 130 -60 130 -50 130 -40 130 -30 130 -20 130 -10 130 0 130 10 130 20 130 30 130 40 130 50 130 60 130 70 130 80 130 90 130 100 130 110 130 120 130 130 130 140 130 150 130 160 130 170 140 -180 140 -170 140 -160 140 -150 140 -140 140 -130 140 -120 140 -110 140 -100 140 -90 140 -80 140 -70 140 -60 140 -50 140 -40 140 -30 140 -20 140 -10 140 0 140 10 140 20 140 30 140 40 140 50 140 60 140 70 140 80 140 90 140 100 140 110 140 120 140 130 140 140 140 150 140 160 140 170 150 -180 150 -170 150 -160 150 -150 150 -140 150 -130 150 -120 150 -110 150 -100 150 -90 150 -80 150 -70 150 -60 150 -50 150 -40 150 -30 150 -20 150 -10 150 0 150 10 150 20 150 30 150 40 150 50 150 60 150 70 150 80 150 90 150 100 150 110 150 120 150 130 150 140 150 150 150 160 150 170 160 -180 160 -170 160 -160 160 -150 160 -140 160 -130 160 -120 160 -110 160 -100 160 -90 160 -80 160 -70 160 -60 160 -50 160 -40 160 -30 160 -20 160 -10 160 0 160 10 160 20 160 30 160 40 160 50 160 60 160 70 160 80 160 90 160 100 160 110 160 120 160 130 160 140 160 150 160 160 160 170 170 -180 170 -170 170 -160 170 -150 170 -140 170 -130 170 -120 170 -110 170 -100 170 -90 170 -80 170 -70 170 -60 170 -50 170 -40 170 -30 170 -20 170 -10 170 0 170 10 170 20 170 30 170 40 170 50 170 60 170 70 170 80 170 90 170 100 170 110 170 120 170 130 170 140 170 150 170 160 170 170");
            break;
        case RAMG:
            std::cerr << "No support for glycerine RAM level in non-glycerine residue space" << std::endl;
            exit(-1);
            break;
    }
    for (auto &ramSpacePair : ramSpacePairs) {
        (*ramSpaceSS) >> ramSpacePair.first;
        (*ramSpaceSS) >> ramSpacePair.second;
    }
    delete ramSpaceSS;
    switch (this->m_RamSpaceGLY) {
        case RAM1:
            ramSpacePairsGLY.resize(182);
            ramSpaceSS = new std::stringstream("-170 150 -170 160 -170 170 -160 120 -160 130 -160 140 -160 150 -160 160 -160 170 -150 110 -150 120 -150 130 -150 140 -150 150 -150 160 -150 170 -140 100 -140 110 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -10 -130 0 -130 90 -130 100 -130 110 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -30	-120 -20 -120 -10 -120 0 -120 10 -120 20 -120 90	-120 100 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -40 -110 -30 -110 -20 -110 -10	-110 0 -110 10 -110 20 -110 30 -110 100 -110 110	-110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 90 -100 100 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 90 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 100 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 100 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30-60 -20 -60 -10 -60 0 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 120 -50 130 -50 140 -50 150 -40 -70 -40 -60 -40 -50 -40 -40 -40 -30 -40 -20 -40 130 -40 140 -30 -70 -30 -60 -30 -50 -30 -40 50 30 50 40 50 50 60 30 60 40	60 50 70 30 70 40");
            break;
        case RAMG:
            ramSpacePairsGLY.resize(525);
            ramSpaceSS = new std::stringstream("-180 -180 -180 -170 -180 -160 -180 -150 -180 -140 -180 -130 -180 130 -180 140 -180 150 -180 160 -180 170 -170 -180 -170 -170 -170 -160 -170 -150 -170 -140 -170 130 -170 140 -170 150 -170 160 -170 170 -160 -180 -160 -170 -160 -160 -160 -150 -160 -140 -160 130 -160 140 -160 150 -160 160 -160 170 -150 -180 -150 -170 -150 -160 -150 -150 -150 -140 -150 130 -150 140 -150 150 -150 160 -150 170 -140 -180 -140 -170 -140 -160 -140 -150 -140 -140 -140 -130 -140 0 -140 10 -140 20 -140 30 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -180 -130 -170 -130 -160 -130 -150 -130 -140 -130 -130 -130 -120 -130 -20 -130 -10 -130 0 -130 10 -130 20 -130 30 -130 40 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -180 -120 -170 -120 -160 -120 -150 -120 -140 -120 -130 -120 -120 -120 -110 -120 -30 -120 -20 -120 -10 -120 0 -120 10 -120 20 -120 30 -120 40 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -180 -110 -170 -110 -160 -110 -150 -110 -140 -110 -130 -110 -120 -110 -110 -110 -100 -110 -40 -110 -30 -110 -20 -110 -10 -110 0 -110 10 -110 20 -110 30 -110 40 -110 110 -110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -180 -100 -170 -100 -160 -100 -150 -100 -140 -100 -130 -100 -120 -100 -110 -100 -100 -100 -90 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 40 -100 50 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -180 -90 -170 -90 -160 -90 -150 -90 -140 -90 -130 -90 -120 -90 -110 -90 -100 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 30 -90 40 -90 50 -90 60 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -180 -80 -170 -80 -160 -80 -150 -80 -140 -80 -130 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 30 -80 40 -80 50 -80 60 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -180 -70 -170 -70 -160 -70 -150 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 20 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -180 -60 -170 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30 -60 -20 -60 -10 -60 0 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 110 -50 120 -50 130 -50 140 -50 150 -50 160 -50 170 -40 -60 -40 -50 -40 -40 -40 -30 -40 120 -40 130 -40 140 40 -140 40 -130 40 -120 40 30 40 40 40 50 40 60 50 -170 50 -160 50 -150 50 -140 50 -130 50 -120 50 -110 50 10 50 20 50 30 50 40 50 50 50 60 50 70 60 -180 60 -170 60 -160 60 -150 60 -140 60 -130 60 -120 60 -110 60 0 60 10 60 20 60 30 60 40 60 50 60 60 60 70 60 170 70 -180 70 -170 70 -160 70 -150 70 -140 70 -130 70 -120 70 -110 70 -20 70 -10 70 0 70 10 70 20 70 30 70 40 70 50 70 60 70 70 70 150 70 160 70 170 80 -180 80 -170 80 -160 80 -150 80 -140 80 -130 80 -120 80 -110 80 -60 80 -50 80 -40 80 -30 80 -20 80 -10 80 0 80 10 80 20 80 30 80 40 80 50 80 60 80 130 80 140 80 150 80 160 80 170 90 -180 90 -170 90 -160 90 -150 90 -140 90 -130 90 -120 90 -110 90 -100 90 -60 90 -50 90 -40 90 -30 90 -20 90 -10 90 0 90 10 90 20 90 30 90 40 90 50 90 60 90 100 90 110 90 120 90 130 90 140 90 150 90 160 90 170 100 -180 100 -170 100 -160 100 -150 100 -140 100 -130 100 -120 100 -110 100 -50 100 -40 100 -30 100 -20 100 -10 100 0 100 10 100 20 100 30 100 40 100 50 100 90 100 100 100 110 100 120 100 130 100 140 100 150 100 160 100 170 110 -180 110 -170 110 -160 110 -150 110 -140 110 -130 110 -120 110 -110 110 -40 110 -30 110 -20 110 -10 110 0 110 10 110 20 110 30 110 40 110 100 110 110 110 120 110 130 110 140 110 150 110 160 110 170 120 -180 120 -170 120 -160 120 -150 120 -140 120 -130 120 -120 120 -110 120 -40 120 -30 120 -20 120 -10 120 0 120 10 120 20 120 30 120 110 120 120 120 130 120 140 120 150 120 160 120 170 130 -180 130 -170 130 -160 130 -150 130 -140 130 -130 130 -120 130 -40 130 -30 130 -20 130 -10 130 0 130 10 130 20 130 120 130 130 130 140 130 150 130 160 130 170 140 -180 140 -170 140 -160 140 -150 140 -140 140 -130 140 -120 140 -30 140 -20 140 -10 140 0 140 130 140 140 140 150 140 160 140 170 150 -180 150 -170 150 -160 150 -150 150 -140 150 -130 150 140 150 150 150 160 150 170 160 -180 160 -170 160 -160 160 -150 160 -140 160 -130 160 140 160 150 160 160 160 170 170 -180 170 -170 170 -160 170 -150 170 -140 170 -130 170 140 170 150 170 160 170 170");
            break;
        case RAM_ALL:
            ramSpacePairsGLY.resize(1296);
            ramSpaceSS = new std::stringstream("-180 -180 -180 -170 -180 -160 -180 -150 -180 -140 -180 -130 -180 -120 -180 -110 -180 -100 -180 -90 -180 -80 -180 -70 -180 -60 -180 -50 -180 -40 -180 -30 -180 -20 -180 -10 -180 0 -180 10 -180 20 -180 30 -180 40 -180 50 -180 60 -180 70 -180 80 -180 90 -180 100 -180 110 -180 120 -180 130 -180 140 -180 150 -180 160 -180 170 -170 -180 -170 -170 -170 -160 -170 -150 -170 -140 -170 -130 -170 -120 -170 -110 -170 -100 -170 -90 -170 -80 -170 -70 -170 -60 -170 -50 -170 -40 -170 -30 -170 -20 -170 -10 -170 0 -170 10 -170 20 -170 30 -170 40 -170 50 -170 60 -170 70 -170 80 -170 90 -170 100 -170 110 -170 120 -170 130 -170 140 -170 150 -170 160 -170 170 -160 -180 -160 -170 -160 -160 -160 -150 -160 -140 -160 -130 -160 -120 -160 -110 -160 -100 -160 -90 -160 -80 -160 -70 -160 -60 -160 -50 -160 -40 -160 -30 -160 -20 -160 -10 -160 0 -160 10 -160 20 -160 30 -160 40 -160 50 -160 60 -160 70 -160 80 -160 90 -160 100 -160 110 -160 120 -160 130 -160 140 -160 150 -160 160 -160 170 -150 -180 -150 -170 -150 -160 -150 -150 -150 -140 -150 -130 -150 -120 -150 -110 -150 -100 -150 -90 -150 -80 -150 -70 -150 -60 -150 -50 -150 -40 -150 -30 -150 -20 -150 -10 -150 0 -150 10 -150 20 -150 30 -150 40 -150 50 -150 60 -150 70 -150 80 -150 90 -150 100 -150 110 -150 120 -150 130 -150 140 -150 150 -150 160 -150 170 -140 -180 -140 -170 -140 -160 -140 -150 -140 -140 -140 -130 -140 -120 -140 -110 -140 -100 -140 -90 -140 -80 -140 -70 -140 -60 -140 -50 -140 -40 -140 -30 -140 -20 -140 -10 -140 0 -140 10 -140 20 -140 30 -140 40 -140 50 -140 60 -140 70 -140 80 -140 90 -140 100 -140 110 -140 120 -140 130 -140 140 -140 150 -140 160 -140 170 -130 -180 -130 -170 -130 -160 -130 -150 -130 -140 -130 -130 -130 -120 -130 -110 -130 -100 -130 -90 -130 -80 -130 -70 -130 -60 -130 -50 -130 -40 -130 -30 -130 -20 -130 -10 -130 0 -130 10 -130 20 -130 30 -130 40 -130 50 -130 60 -130 70 -130 80 -130 90 -130 100 -130 110 -130 120 -130 130 -130 140 -130 150 -130 160 -130 170 -120 -180 -120 -170 -120 -160 -120 -150 -120 -140 -120 -130 -120 -120 -120 -110 -120 -100 -120 -90 -120 -80 -120 -70 -120 -60 -120 -50 -120 -40 -120 -30 -120 -20 -120 -10 -120 0 -120 10 -120 20 -120 30 -120 40 -120 50 -120 60 -120 70 -120 80 -120 90 -120 100 -120 110 -120 120 -120 130 -120 140 -120 150 -120 160 -120 170 -110 -180 -110 -170 -110 -160 -110 -150 -110 -140 -110 -130 -110 -120 -110 -110 -110 -100 -110 -90 -110 -80 -110 -70 -110 -60 -110 -50 -110 -40 -110 -30 -110 -20 -110 -10 -110 0 -110 10 -110 20 -110 30 -110 40 -110 50 -110 60 -110 70 -110 80 -110 90 -110 100 -110 110 -110 120 -110 130 -110 140 -110 150 -110 160 -110 170 -100 -180 -100 -170 -100 -160 -100 -150 -100 -140 -100 -130 -100 -120 -100 -110 -100 -100 -100 -90 -100 -80 -100 -70 -100 -60 -100 -50 -100 -40 -100 -30 -100 -20 -100 -10 -100 0 -100 10 -100 20 -100 30 -100 40 -100 50 -100 60 -100 70 -100 80 -100 90 -100 100 -100 110 -100 120 -100 130 -100 140 -100 150 -100 160 -100 170 -90 -180 -90 -170 -90 -160 -90 -150 -90 -140 -90 -130 -90 -120 -90 -110 -90 -100 -90 -90 -90 -80 -90 -70 -90 -60 -90 -50 -90 -40 -90 -30 -90 -20 -90 -10 -90 0 -90 10 -90 20 -90 30 -90 40 -90 50 -90 60 -90 70 -90 80 -90 90 -90 100 -90 110 -90 120 -90 130 -90 140 -90 150 -90 160 -90 170 -80 -180 -80 -170 -80 -160 -80 -150 -80 -140 -80 -130 -80 -120 -80 -110 -80 -100 -80 -90 -80 -80 -80 -70 -80 -60 -80 -50 -80 -40 -80 -30 -80 -20 -80 -10 -80 0 -80 10 -80 20 -80 30 -80 40 -80 50 -80 60 -80 70 -80 80 -80 90 -80 100 -80 110 -80 120 -80 130 -80 140 -80 150 -80 160 -80 170 -70 -180 -70 -170 -70 -160 -70 -150 -70 -140 -70 -130 -70 -120 -70 -110 -70 -100 -70 -90 -70 -80 -70 -70 -70 -60 -70 -50 -70 -40 -70 -30 -70 -20 -70 -10 -70 0 -70 10 -70 20 -70 30 -70 40 -70 50 -70 60 -70 70 -70 80 -70 90 -70 100 -70 110 -70 120 -70 130 -70 140 -70 150 -70 160 -70 170 -60 -180 -60 -170 -60 -160 -60 -150 -60 -140 -60 -130 -60 -120 -60 -110 -60 -100 -60 -90 -60 -80 -60 -70 -60 -60 -60 -50 -60 -40 -60 -30 -60 -20 -60 -10 -60 0 -60 10 -60 20 -60 30 -60 40 -60 50 -60 60 -60 70 -60 80 -60 90 -60 100 -60 110 -60 120 -60 130 -60 140 -60 150 -60 160 -60 170 -50 -180 -50 -170 -50 -160 -50 -150 -50 -140 -50 -130 -50 -120 -50 -110 -50 -100 -50 -90 -50 -80 -50 -70 -50 -60 -50 -50 -50 -40 -50 -30 -50 -20 -50 -10 -50 0 -50 10 -50 20 -50 30 -50 40 -50 50 -50 60 -50 70 -50 80 -50 90 -50 100 -50 110 -50 120 -50 130 -50 140 -50 150 -50 160 -50 170 -40 -180 -40 -170 -40 -160 -40 -150 -40 -140 -40 -130 -40 -120 -40 -110 -40 -100 -40 -90 -40 -80 -40 -70 -40 -60 -40 -50 -40 -40 -40 -30 -40 -20 -40 -10 -40 0 -40 10 -40 20 -40 30 -40 40 -40 50 -40 60 -40 70 -40 80 -40 90 -40 100 -40 110 -40 120 -40 130 -40 140 -40 150 -40 160 -40 170 -30 -180 -30 -170 -30 -160 -30 -150 -30 -140 -30 -130 -30 -120 -30 -110 -30 -100 -30 -90 -30 -80 -30 -70 -30 -60 -30 -50 -30 -40 -30 -30 -30 -20 -30 -10 -30 0 -30 10 -30 20 -30 30 -30 40 -30 50 -30 60 -30 70 -30 80 -30 90 -30 100 -30 110 -30 120 -30 130 -30 140 -30 150 -30 160 -30 170 -20 -180 -20 -170 -20 -160 -20 -150 -20 -140 -20 -130 -20 -120 -20 -110 -20 -100 -20 -90 -20 -80 -20 -70 -20 -60 -20 -50 -20 -40 -20 -30 -20 -20 -20 -10 -20 0 -20 10 -20 20 -20 30 -20 40 -20 50 -20 60 -20 70 -20 80 -20 90 -20 100 -20 110 -20 120 -20 130 -20 140 -20 150 -20 160 -20 170 -10 -180 -10 -170 -10 -160 -10 -150 -10 -140 -10 -130 -10 -120 -10 -110 -10 -100 -10 -90 -10 -80 -10 -70 -10 -60 -10 -50 -10 -40 -10 -30 -10 -20 -10 -10 -10 0 -10 10 -10 20 -10 30 -10 40 -10 50 -10 60 -10 70 -10 80 -10 90 -10 100 -10 110 -10 120 -10 130 -10 140 -10 150 -10 160 -10 170 0 -180 0 -170 0 -160 0 -150 0 -140 0 -130 0 -120 0 -110 0 -100 0 -90 0 -80 0 -70 0 -60 0 -50 0 -40 0 -30 0 -20 0 -10 0 0 0 10 0 20 0 30 0 40 0 50 0 60 0 70 0 80 0 90 0 100 0 110 0 120 0 130 0 140 0 150 0 160 0 170 10 -180 10 -170 10 -160 10 -150 10 -140 10 -130 10 -120 10 -110 10 -100 10 -90 10 -80 10 -70 10 -60 10 -50 10 -40 10 -30 10 -20 10 -10 10 0 10 10 10 20 10 30 10 40 10 50 10 60 10 70 10 80 10 90 10 100 10 110 10 120 10 130 10 140 10 150 10 160 10 170 20 -180 20 -170 20 -160 20 -150 20 -140 20 -130 20 -120 20 -110 20 -100 20 -90 20 -80 20 -70 20 -60 20 -50 20 -40 20 -30 20 -20 20 -10 20 0 20 10 20 20 20 30 20 40 20 50 20 60 20 70 20 80 20 90 20 100 20 110 20 120 20 130 20 140 20 150 20 160 20 170 30 -180 30 -170 30 -160 30 -150 30 -140 30 -130 30 -120 30 -110 30 -100 30 -90 30 -80 30 -70 30 -60 30 -50 30 -40 30 -30 30 -20 30 -10 30 0 30 10 30 20 30 30 30 40 30 50 30 60 30 70 30 80 30 90 30 100 30 110 30 120 30 130 30 140 30 150 30 160 30 170 40 -180 40 -170 40 -160 40 -150 40 -140 40 -130 40 -120 40 -110 40 -100 40 -90 40 -80 40 -70 40 -60 40 -50 40 -40 40 -30 40 -20 40 -10 40 0 40 10 40 20 40 30 40 40 40 50 40 60 40 70 40 80 40 90 40 100 40 110 40 120 40 130 40 140 40 150 40 160 40 170 50 -180 50 -170 50 -160 50 -150 50 -140 50 -130 50 -120 50 -110 50 -100 50 -90 50 -80 50 -70 50 -60 50 -50 50 -40 50 -30 50 -20 50 -10 50 0 50 10 50 20 50 30 50 40 50 50 50 60 50 70 50 80 50 90 50 100 50 110 50 120 50 130 50 140 50 150 50 160 50 170 60 -180 60 -170 60 -160 60 -150 60 -140 60 -130 60 -120 60 -110 60 -100 60 -90 60 -80 60 -70 60 -60 60 -50 60 -40 60 -30 60 -20 60 -10 60 0 60 10 60 20 60 30 60 40 60 50 60 60 60 70 60 80 60 90 60 100 60 110 60 120 60 130 60 140 60 150 60 160 60 170 70 -180 70 -170 70 -160 70 -150 70 -140 70 -130 70 -120 70 -110 70 -100 70 -90 70 -80 70 -70 70 -60 70 -50 70 -40 70 -30 70 -20 70 -10 70 0 70 10 70 20 70 30 70 40 70 50 70 60 70 70 70 80 70 90 70 100 70 110 70 120 70 130 70 140 70 150 70 160 70 170 80 -180 80 -170 80 -160 80 -150 80 -140 80 -130 80 -120 80 -110 80 -100 80 -90 80 -80 80 -70 80 -60 80 -50 80 -40 80 -30 80 -20 80 -10 80 0 80 10 80 20 80 30 80 40 80 50 80 60 80 70 80 80 80 90 80 100 80 110 80 120 80 130 80 140 80 150 80 160 80 170 90 -180 90 -170 90 -160 90 -150 90 -140 90 -130 90 -120 90 -110 90 -100 90 -90 90 -80 90 -70 90 -60 90 -50 90 -40 90 -30 90 -20 90 -10 90 0 90 10 90 20 90 30 90 40 90 50 90 60 90 70 90 80 90 90 90 100 90 110 90 120 90 130 90 140 90 150 90 160 90 170 100 -180 100 -170 100 -160 100 -150 100 -140 100 -130 100 -120 100 -110 100 -100 100 -90 100 -80 100 -70 100 -60 100 -50 100 -40 100 -30 100 -20 100 -10 100 0 100 10 100 20 100 30 100 40 100 50 100 60 100 70 100 80 100 90 100 100 100 110 100 120 100 130 100 140 100 150 100 160 100 170 110 -180 110 -170 110 -160 110 -150 110 -140 110 -130 110 -120 110 -110 110 -100 110 -90 110 -80 110 -70 110 -60 110 -50 110 -40 110 -30 110 -20 110 -10 110 0 110 10 110 20 110 30 110 40 110 50 110 60 110 70 110 80 110 90 110 100 110 110 110 120 110 130 110 140 110 150 110 160 110 170 120 -180 120 -170 120 -160 120 -150 120 -140 120 -130 120 -120 120 -110 120 -100 120 -90 120 -80 120 -70 120 -60 120 -50 120 -40 120 -30 120 -20 120 -10 120 0 120 10 120 20 120 30 120 40 120 50 120 60 120 70 120 80 120 90 120 100 120 110 120 120 120 130 120 140 120 150 120 160 120 170 130 -180 130 -170 130 -160 130 -150 130 -140 130 -130 130 -120 130 -110 130 -100 130 -90 130 -80 130 -70 130 -60 130 -50 130 -40 130 -30 130 -20 130 -10 130 0 130 10 130 20 130 30 130 40 130 50 130 60 130 70 130 80 130 90 130 100 130 110 130 120 130 130 130 140 130 150 130 160 130 170 140 -180 140 -170 140 -160 140 -150 140 -140 140 -130 140 -120 140 -110 140 -100 140 -90 140 -80 140 -70 140 -60 140 -50 140 -40 140 -30 140 -20 140 -10 140 0 140 10 140 20 140 30 140 40 140 50 140 60 140 70 140 80 140 90 140 100 140 110 140 120 140 130 140 140 140 150 140 160 140 170 150 -180 150 -170 150 -160 150 -150 150 -140 150 -130 150 -120 150 -110 150 -100 150 -90 150 -80 150 -70 150 -60 150 -50 150 -40 150 -30 150 -20 150 -10 150 0 150 10 150 20 150 30 150 40 150 50 150 60 150 70 150 80 150 90 150 100 150 110 150 120 150 130 150 140 150 150 150 160 150 170 160 -180 160 -170 160 -160 160 -150 160 -140 160 -130 160 -120 160 -110 160 -100 160 -90 160 -80 160 -70 160 -60 160 -50 160 -40 160 -30 160 -20 160 -10 160 0 160 10 160 20 160 30 160 40 160 50 160 60 160 70 160 80 160 90 160 100 160 110 160 120 160 130 160 140 160 150 160 160 160 170 170 -180 170 -170 170 -160 170 -150 170 -140 170 -130 170 -120 170 -110 170 -100 170 -90 170 -80 170 -70 170 -60 170 -50 170 -40 170 -30 170 -20 170 -10 170 0 170 10 170 20 170 30 170 40 170 50 170 60 170 70 170 80 170 90 170 100 170 110 170 120 170 130 170 140 170 150 170 160 170 170");
            break;
        case RAM2:
            std::cerr << "No support for RAM level 2 in glycerine residue space" << std::endl;
            exit(-1);
            break;
    }
    for (auto &ramSpacePair : ramSpacePairsGLY) {
        (*ramSpaceSS) >> ramSpacePair.first;
        (*ramSpaceSS) >> ramSpacePair.second;
    }

    delete ramSpaceSS;
}

RamSpace Angles::getRamSpace() const {
    return m_RamSpace;
}

void Angles::setRamSpace(RamSpace ramSpace) {
    Angles::m_RamSpace = ramSpace;
}

bool Angles::FilterJ(double phi, double J, double error, bool Gly) {

    double angle, cal_J;
    angle = cal_J = 0.0;
    if (Gly) {
        if (J > 13.476) J = 13.476;
        if (J < 5.6) J = 5.6;

        angle = (phi - 60.0) * 3.141592 / 180.0;
        cal_J = 6.4 * std::cos(angle) * std::cos(angle) - 1.4 * std::cos(angle) + 1.9;
        angle = (phi + 60.0) * 3.141592 / 180.0;
        cal_J = 6.4 * std::cos(angle) * std::cos(angle) - 1.4 * std::cos(angle) + 1.9 + cal_J;
    } else {
        if (J > 9.7) J = 9.7;
        if (J < 1.823) J = 1.823;

        angle = (phi - 60.0) * 3.141592 / 180.0;
        cal_J = 6.4 * std::cos(angle) * std::cos(angle) - 1.4 * std::cos(angle) + 1.9;
    }

    double diff = std::abs(cal_J - J);
    if (diff <= error) return true;
    else return false;

}

double Angles::getCutoff() const {
    return cutoff;
}

void Angles::setCutoff(double cutoff) {
    Angles::cutoff = cutoff;
}

// Reads AminoAcids and J values and stores them in internal data structure
void Angles::readAAFromFile(const std::string& file_path, bool verbose) {
    std::string line;
    int lineNumber = 0;

    ifstream infile;
    infile.open(file_path.c_str(), ifstream::in);


    if (!infile.is_open()) {
        cerr << "Error: could not open " << file_path << endl;
    }
    while (infile.good()) {
        getline(infile, line);
        if (line.empty())
            break;
        if (std::isalpha(line.at(0))) {
            lineNumber++;

            string AAType;
            double J;
            istringstream currentLine(line);
            currentLine >> AAType >> J;
            struct aminoInfo info = {.AAType=AAType, .J=J};
            AASequence.push_back(info);

            if (verbose) {
                cout << (floor(lineNumber)) << ") " << AAType;
                if (J > 900) {
                    cout << " (without J)";
                }
                cout << endl;
            }
        }
    }//end while loop
    if (verbose)
        cout << "End of File." << endl;
    infile.close();
}

void Angles::printAminoAcidSequence() {
    for (auto &pairing : AASequence) {
        std::cout << "AA: " << pairing.AAType << ", J: " << pairing.J << std::endl;
    }
}

bool Angles::isSkip() const {
    return skip;
}

void Angles::setSkip(bool skip) {
    Angles::skip = skip;
}

void Angles::writeAngles(const std::vector<std::vector<anglePair>> &angleList,
                         const std::vector<std::vector<double>> &rmsdList,
                         bool verbose) {
    for (int i = 0; i < angleList.size(); i++) {
        std::string angleFile = std::to_string(i+1) + ".angles";
        if (verbose)
            std::cout << "Writing: " << angleFile << std::endl;
        std::ofstream angleOutFile(angleFile);
        for (int j = 0; j < angleList[i].size(); j++) {
            // phi psi RMSD
            angleOutFile << angleList[i][j].first << "\t" << angleList[i][j].second
                << "\t" << rmsdList[i][j] << std::endl;
        }
        angleOutFile.close();
    }
}

void Angles::generateAngles(std::vector<std::vector<anglePair>> &retAngles, std::vector<std::vector<double>> &retRMSDs,
                            bool verbose) {
    if (AASequence.empty()) {
        std::cerr << "No amino acids loaded!" << std::endl;
        return;
    }
    // Iterate through stored amino acid values
    // and filter viable angles with the Redcat library,
    // and sorting with Red-black tree, based on RMSD
    std::vector<anglePair> *correctSpace;
    Redcat mRedcat("./", m_RDCPrefix, m_NumOfMedia);
    int currentResidueNumber = -1;
    for (int i = 0; i < AASequence.size(); i++) {
        auto &res = AASequence[i];
        TStorage<double, anglePair> sortedRMSD;
        currentResidueNumber++;
        if (verbose)
            std::cout << "Generating angles for residue " << (currentResidueNumber+1) << ": " << res.AAType;
        bool glycine = (res.AAType == "GLY");
        // establish Ramachandran space for current residue
        if (glycine) {
            correctSpace = &ramSpacePairsGLY;
        } else {
            correctSpace = &ramSpacePairs;
        }
        // use custom space if exists
        if (ramSpaceCustom.find(currentResidueNumber) != ramSpaceCustom.end())
        {
            auto* customSpace = &ramSpaceCustom[currentResidueNumber];
            if (m_CustomRamspace && customSpace && i < ramSpaceCustom.size() - 1 && !customSpace->empty()) {
              correctSpace = customSpace; 
            }
        }
        for (auto &phiPsiPair : *correctSpace) {
            double phi = phiPsiPair.first;
            double psi = phiPsiPair.second;
            bool validPhi = true;
            // legacy check for valid J-couplings
            //if (res.J < 900) {
            //    validPhi = FilterJ(phi, res.J, 2.5, glycine);
            //}
            // calculate rmsd for sorting purposes, using REDCAT library
            if (validPhi) {
                double rmsd = 0;
                if (!skip) {
                    Polypeptide pp;
                    pp.setVectors(mRedcat.getData(), mRedcat.gettotalDataCount(),
                                  mRedcat.getdataCount(), mRedcat.getshifts());
                    pp.appendAminoAcid(phi, psi);
                    pp.appendAminoAcid();
                    mRedcat.offset(currentResidueNumber);
                    rmsd = mRedcat.calculateRMSD(pp);
                }
                else {
                    rmsd = 0;
                }
                if (rmsd != rmsd) rmsd = 0; // gets rid of NaN problem
                if (cutoff == 0 || rmsd < cutoff) {
                    struct anglePair pair = {.first=phi, .second=psi};
                    sortedRMSD.Insert(rmsd, pair);
                }
            }
        }
        // Finally, create array of anglePairs and RMSDs to return
        TStorageNode<double, anglePair> *currentNode;
        std::vector<anglePair> _retAngles;
        std::vector<double> _retRMSDs;
        currentNode = sortedRMSD.GetFirst();
        for (int j = 0; j < sortedRMSD.GetCount(); j++) {
            if (currentNode) {
                _retAngles.push_back(currentNode->GetData());
                _retRMSDs.push_back(currentNode->GetKey());
            }
            currentNode = currentNode->GetNext();
        }
        if (verbose)
            std::cout << "; Total candidates: " << sortedRMSD.GetCount() << std::endl;
        // set parameters for multiple value return
        retAngles.push_back(_retAngles);
        retRMSDs.push_back(_retRMSDs);
    }

}

void Angles::printRAMSpacePairs() {
    std::cout << "Normal RAM space pairs: " << std::endl;
    for (auto &pair : ramSpacePairs) {
        std::cout << pair.first << ", " << pair.second << std::endl;
    }
    std::cout << "Glycine RAM space pairs: " << std::endl;
    for (auto &pair : ramSpacePairsGLY) {
        std::cout << pair.first << ", " << pair.second << std::endl;
    }

}

RamSpace Angles::getRamSpaceGly() const {
    return m_RamSpaceGLY;
}

void Angles::setRamSpaceGly(RamSpace ramSpaceGly) {
    m_RamSpaceGLY = ramSpaceGly;
}

void Angles::setCustomRamspace(bool customRamspace)
{
    m_CustomRamspace = customRamspace;
}

bool Angles::isCustomRamspace() const
{
    return m_CustomRamspace;
}

void Angles::readRAMFromFiles() {
    if (!m_CustomRamspace)
        return;

    std::string line;

    ifstream infile;
    for (int doc = 1; doc <= AASequence.size(); doc++) {
        string file_path = to_string(doc) + ".ramangles";
        infile.open(file_path.c_str(), ifstream::in);

        if (!infile.is_open()) {
            continue;
        }
        else
        {
            cout << "Using custom phi/psi angles: " << file_path << endl;
        }
        while (infile.good()) {
            getline(infile, line);
            if (!line.empty()) {

              // Add a vector of angle pairs at the AA in the map if it does not exist
              if (ramSpaceCustom.find(doc - 1) == ramSpaceCustom.end())
              {
                  ramSpaceCustom[doc - 1] = vector<anglePair>();
              }
              double phi;
              double psi;
              istringstream currentLine(line);
              currentLine >> phi >> psi;
              anglePair pair = {phi, psi};
              ramSpaceCustom[doc - 1].push_back(pair);
            }
        }//end while loop
        infile.close();
    }
}

